# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: Run API Scripts
        run: npm run test:api

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: npm run test:chrome
  

      #new report
     - name: Test Reporter
    # You may pin to the exact commit or the version.
    # uses: dorny/test-reporter@0d00bb14cb0cc2c9b8985df6e81dd333188224e1
    uses: dorny/test-reporter@v1.5.0
    with:  Otrium
     artifact: # optional
    # Name of the check run
    name: 
    # Coma separated list of paths to test results
Supports wildcards via [fast-glob](https://github.com/mrmlnc/fast-glob)
All matched result files must be of same format

    path: 
    # The fast-glob library that is internally used interprets backslashes as escape characters.
If enabled, all backslashes in provided path will be replaced by forward slashes and act as directory separators.
It might be useful when path input variable is composed dynamically from existing directory paths on Windows.

    path-replace-backslashes: # optional, default is false
    # Format of test results. Supported options:
  - dart-json
  - dotnet-trx
  - flutter-json
  - java-junit
  - jest-junit
  - mocha-json

    reporter: 
    # Limits which test suites are listed. Supported options:
  - all
  - only-failed

    list-suites: # default is all
    # Limits which test cases are listed. Supported options:
  - all
  - only-failed
  - none

    list-tests: # default is all
    # Limits number of created annotations with error message and stack trace captured during test execution.
Must be less or equal to 50.

    max-annotations: # default is 10
    # Set this action as failed if test report contain any failed test
    fail-on-error: # default is true
    # Relative path under $GITHUB_WORKSPACE where the repository was checked out
    working-directory: # optional
    # Allows you to generate only the summary.
If enabled, the report will contain a table listing each test results file and the number of passed, failed, and skipped tests.
Detailed listing of test suites and test cases will be skipped.

    only-summary: # optional, default is false
    # GitHub Access Token
    token: # optional, default is ${{ github.token }}
